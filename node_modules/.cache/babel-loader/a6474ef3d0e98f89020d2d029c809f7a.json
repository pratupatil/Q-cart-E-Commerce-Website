{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patil\\\\Downloads\\\\Qkart_FrontEnd-main\\\\Qkart_FrontEnd-main\\\\src\\\\components\\\\AddNewAddress.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, TextField, Typography, Box } from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport axios from \"axios\";\nimport { config } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewAddress = ({\n  token,\n  addAddress\n}) => {\n  _s();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [newAddress, setNewAddress] = useState({\n    value: \"\",\n    suggestions: []\n  });\n  const handleInputChange = async event => {\n    const addressInput = event.target.value;\n    try {\n      // Fetch address suggestions from Bing Maps API\n      const response = await axios.get(`https://dev.virtualearth.net/REST/v1/Locations?query=${addressInput}&key=${\"AkCB7LU7IDWnxG6cMzetXbulcO8-MrGC8vvY4Fe9jj-0z0ExIQIHlmwbZ6OYKyBD\"}`);\n      const suggestions = response.data.resourceSets[0].resources;\n      setNewAddress({\n        ...newAddress,\n        value: addressInput,\n        suggestions\n      });\n    } catch (error) {\n      enqueueSnackbar(\"Error fetching address suggestions\", {\n        variant: \"error\"\n      });\n      console.error(\"Error fetching address suggestions:\", error);\n    }\n  };\n  const handleAddressSelect = selectedAddress => {\n    setNewAddress({\n      ...newAddress,\n      value: selectedAddress\n    });\n  };\n  const handleAddAddress = async () => {\n    try {\n      // Handle adding the address\n      await addAddress(token, newAddress.value);\n      // Clear only the address input value, keep suggestions intact\n      setNewAddress({\n        ...newAddress,\n        value: \"\"\n      });\n      enqueueSnackbar(\"Address added successfully\", {\n        variant: \"success\"\n      });\n    } catch (error) {\n      enqueueSnackbar(\"Error adding address\", {\n        variant: \"error\"\n      });\n      console.error(\"Error adding address:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter your complete address\",\n      value: newAddress.value,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: newAddress.suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleAddressSelect(suggestion.name),\n        children: suggestion.name\n      }, suggestion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleAddAddress,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AddNewAddress, \"ZXiP1sAhK31t4ErqhAtF4RCWH5A=\", false, function () {\n  return [useSnackbar];\n});\n_c = AddNewAddress;\nexport default AddNewAddress;\nvar _c;\n$RefreshReg$(_c, \"AddNewAddress\");","map":{"version":3,"names":["React","useState","Button","TextField","Typography","Box","useSnackbar","axios","config","jsxDEV","_jsxDEV","AddNewAddress","token","addAddress","_s","enqueueSnackbar","newAddress","setNewAddress","value","suggestions","handleInputChange","event","addressInput","target","response","get","data","resourceSets","resources","error","variant","console","handleAddressSelect","selectedAddress","handleAddAddress","display","flexDirection","children","label","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","suggestion","onClick","name","id","_c","$RefreshReg$"],"sources":["C:/Users/patil/Downloads/Qkart_FrontEnd-main/Qkart_FrontEnd-main/src/components/AddNewAddress.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, TextField, Typography, Box } from \"@mui/material\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport axios from \"axios\";\r\nimport { config } from \"../App\";\r\n\r\nconst AddNewAddress = ({ token, addAddress }) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [newAddress, setNewAddress] = useState({\r\n    value: \"\",\r\n    suggestions: [],\r\n  });\r\n\r\n  const handleInputChange = async (event) => {\r\n    const addressInput = event.target.value;\r\n  \r\n    try {\r\n      // Fetch address suggestions from Bing Maps API\r\n      const response = await axios.get(\r\n        `https://dev.virtualearth.net/REST/v1/Locations?query=${addressInput}&key=${\"AkCB7LU7IDWnxG6cMzetXbulcO8-MrGC8vvY4Fe9jj-0z0ExIQIHlmwbZ6OYKyBD\"}`\r\n      );\r\n      const suggestions = response.data.resourceSets[0].resources;\r\n      setNewAddress({ ...newAddress, value: addressInput, suggestions });\r\n    } catch (error) {\r\n      enqueueSnackbar(\"Error fetching address suggestions\", { variant: \"error\" });\r\n      console.error(\"Error fetching address suggestions:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleAddressSelect = (selectedAddress) => {\r\n    setNewAddress({ ...newAddress, value: selectedAddress });\r\n  };\r\n\r\n  const handleAddAddress = async () => {\r\n    try {\r\n      // Handle adding the address\r\n      await addAddress(token, newAddress.value);\r\n      // Clear only the address input value, keep suggestions intact\r\n      setNewAddress({ ...newAddress, value: \"\" });\r\n      enqueueSnackbar(\"Address added successfully\", { variant: \"success\" });\r\n    } catch (error) {\r\n      enqueueSnackbar(\"Error adding address\", { variant: \"error\" });\r\n      console.error(\"Error adding address:\", error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TextField\r\n        label=\"Enter your complete address\"\r\n        value={newAddress.value}\r\n        onChange={handleInputChange}\r\n      />\r\n      <ul>\r\n        {newAddress.suggestions.map((suggestion) => (\r\n          <li key={suggestion.id} onClick={() => handleAddressSelect(suggestion.name)}>\r\n            {suggestion.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Button variant=\"contained\" onClick={handleAddAddress}>\r\n        Add\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddNewAddress;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}