{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patil\\\\Downloads\\\\Qkart_FrontEnd-main\\\\Qkart_FrontEnd-main\\\\src\\\\components\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { CreditCard, Delete } from \"@mui/icons-material\";\nimport { Button, Divider, Grid, Stack, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { config } from \"../App\";\nimport Cart, { getTotalCartValue, generateCartItemsFrom } from \"./Cart\";\nimport \"./Checkout.css\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport AddNewAddress from \"./AddNewAddress\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddNewAddressView = ({\n  token,\n  newAddress,\n  handleNewAddress,\n  addAddress\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      multiline: true,\n      minRows: 4,\n      placeholder: \"Enter your complete address\",\n      onChange: e => handleNewAddress({\n        ...newAddress,\n        value: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      my: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: async () => await addAddress(token, newAddress),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        onClick: () => handleNewAddress({\n          ...newAddress,\n          isAddingNewAddress: false\n        }),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = AddNewAddressView;\nconst Checkout = () => {\n  _s();\n  const token = localStorage.getItem(\"token\");\n  const history = useHistory();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [items, setItems] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [addresses, setAddresses] = useState({\n    all: [],\n    selected: \"\"\n  });\n  const [newAddress, setNewAddress] = useState({\n    isAddingNewAddress: false,\n    value: \"\"\n  });\n  const [isPaymentDone, setIsPaymentDone] = useState(false);\n  const getProducts = async () => {\n    try {\n      const response = await axios.get(`${config.endpoint}/products`);\n      setProducts(response.data);\n      return response.data;\n    } catch (e) {\n      if (e.response && e.response.status === 500) {\n        enqueueSnackbar(e.response.data.message, {\n          variant: \"error\"\n        });\n        return null;\n      } else {\n        enqueueSnackbar(\"Could not fetch products. Check that the backend is running, reachable and returns valid JSON.\", {\n          variant: \"error\"\n        });\n      }\n    }\n  };\n  const fetchCart = async token => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${config.endpoint}/cart`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch {\n      enqueueSnackbar(\"Could not fetch cart details. Check that the backend is running, reachable and returns valid JSON.\", {\n        variant: \"error\"\n      });\n      return null;\n    }\n  };\n  const getAddresses = async token => {\n    if (!token) {\n      history.push(\"/login\");\n      enqueueSnackbar(\"You must be logged in to access checkout page\", {\n        variant: \"error\"\n      });\n      return;\n    }\n    try {\n      const response = await axios.get(`${config.endpoint}/user/addresses`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAddresses({\n        ...addresses,\n        all: response.data\n      });\n      return response.data;\n    } catch {\n      enqueueSnackbar(\"Could not fetch addresses. Check that the backend is running, reachable and returns valid JSON.\", {\n        variant: \"error\"\n      });\n      return null;\n    }\n  };\n  const addAddress = async (token, newAddress) => {\n    try {\n      const url = `${config.endpoint}/user/addresses`;\n      const address = {\n        address: newAddress.value\n      };\n      const response = await axios.post(url, address, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNewAddress({\n        isAddingNewAddress: false,\n        value: \"\"\n      });\n      setAddresses({\n        ...addresses,\n        all: response.data\n      });\n    } catch (e) {\n      if (e.response) {\n        enqueueSnackbar(e.response.data.message, {\n          variant: \"error\"\n        });\n      } else {\n        enqueueSnackbar(\"Could not add this address. Check that the backend is running, reachable and returns valid JSON.\", {\n          variant: \"error\"\n        });\n      }\n    }\n  };\n  const deleteAddress = async (token, addressId) => {\n    try {\n      const url = `${config.endpoint}/user/addresses/${addressId}`;\n      const response = await axios.delete(url, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAddresses({\n        ...addresses,\n        all: response.data\n      });\n    } catch (e) {\n      if (e.response) {\n        enqueueSnackbar(e.response.data.message, {\n          variant: \"error\"\n        });\n      } else {\n        enqueueSnackbar(\"Could not delete this address. Check that the backend is running, reachable and returns valid JSON.\", {\n          variant: \"error\"\n        });\n      }\n    }\n  };\n  const validateRequest = (items, addresses) => {\n    const totalCartValue = getTotalCartValue(items);\n    const currentBalance = localStorage.getItem(\"balance\");\n    if (totalCartValue > currentBalance) {\n      enqueueSnackbar(\"You do not have enough balance in your wallet for this purchase.\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n    if (addresses.all.length === 0) {\n      enqueueSnackbar(\"Please add a new address before proceeding.\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n    if (addresses.selected.length === 0) {\n      enqueueSnackbar(\"Please select one shipping address to proceed.\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n    return true;\n  };\n  const handleRazorpayPayment = async () => {\n    const amount = getTotalCartValue(items) * 100; // Convert to paisa\n    const options = {\n      key: \"YOUR_RAZORPAY_KEY_ID\",\n      amount: amount,\n      currency: \"INR\",\n      name: \"Your Company Name\",\n      description: \"Test Transaction\",\n      handler: function (response) {\n        setIsPaymentDone(true);\n        enqueueSnackbar(\"Payment successful\", {\n          variant: \"success\"\n        });\n      },\n      prefill: {\n        name: \"Your Name\",\n        email: \"your.email@example.com\",\n        contact: \"9999999999\"\n      },\n      theme: {\n        color: \"#3399cc\"\n      }\n    };\n    const rzp = new window.Razorpay(options);\n    rzp.open();\n  };\n  const performCheckout = async (token, items, addresses) => {\n    try {\n      if (validateRequest(items, addresses)) {\n        const url = `${config.endpoint}/cart/checkout`;\n        const response = await axios.post(url, {\n          addressId: addresses.selected\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const totalCartValue = getTotalCartValue(items);\n        const currentBalance = localStorage.getItem(\"balance\");\n        localStorage.setItem(\"balance\", currentBalance - totalCartValue);\n        history.push(\"/thanks\");\n        enqueueSnackbar(\"Order placed successfully\", {\n          variant: \"success\"\n        });\n      }\n    } catch (err) {\n      if (err.response) {\n        enqueueSnackbar(err.response.data.message, {\n          variant: \"error\"\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    const onLoadHandler = async () => {\n      const productsData = await getProducts();\n      const cartData = await fetchCart(token);\n      if (productsData && cartData) {\n        const cartDetails = await generateCartItemsFrom(cartData, productsData);\n        setItems(cartDetails);\n      }\n      await getAddresses(token);\n    };\n    onLoadHandler();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      hasHiddenAuthButtons: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"checkout-container\",\n          padding: \"1rem\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              fontWeight: \"bold\"\n            },\n            my: \"1rem\",\n            children: \"Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            my: \"1rem\",\n            color: \"#3C3C3C\",\n            sx: {\n              fontWeight: \"bold\"\n            },\n            children: \"Shipping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            my: \"1rem\",\n            children: \"Manage all the shipping addresses you want. This way you won't have to enter the shipping address manually with every order. Select the address you want to get your order delivered.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: addresses.all.length > 0 ? addresses.all.map(address => /*#__PURE__*/_jsxDEV(Box, {\n              className: `address-item  ${address._id === addresses.selected ? \"selected\" : \"not-selected\"}`,\n              onClick: () => setAddresses({\n                ...addresses,\n                selected: address._id\n              }),\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: address.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 34\n                }, this),\n                onClick: () => deleteAddress(token, address._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this)]\n            }, address._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n              my: \"1rem\",\n              children: \"No addresses found for this account. Please add one to proceed.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), newAddress.isAddingNewAddress ? /*#__PURE__*/_jsxDEV(AddNewAddressView, {\n            token: token,\n            newAddress: newAddress,\n            handleNewAddress: setNewAddress,\n            addAddress: addAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            id: \"add-new-btn\",\n            size: \"large\",\n            onClick: () => {\n              setNewAddress(currNewAddress => ({\n                ...currNewAddress,\n                isAddingNewAddress: true\n              }));\n            },\n            children: \"Add new address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"#3C3C3C\",\n            variant: \"h4\",\n            my: \"1rem\",\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"#3C3C3C\",\n            my: \"1rem\",\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            my: \"1rem\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Pay $\", getTotalCartValue(items), \" of available $\", localStorage.getItem(\"balance\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleRazorpayPayment,\n            children: \"Pay with Razorpay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setIsPaymentDone(true),\n            children: \"Cash on Delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(CreditCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 26\n            }, this),\n            variant: \"contained\",\n            onClick: async () => await performCheckout(token, items, addresses),\n            disabled: !isPaymentDone,\n            children: \"PLACE ORDER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        bgcolor: \"#E9F5E1\",\n        children: /*#__PURE__*/_jsxDEV(Cart, {\n          isReadOnly: true,\n          products: products,\n          items: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Checkout, \"HG2qoWSe4l+/xbilGc8AiyzIzN8=\", false, function () {\n  return [useHistory, useSnackbar];\n});\n_c2 = Checkout;\nexport default Checkout;\nvar _c, _c2;\n$RefreshReg$(_c, \"AddNewAddressView\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"names":["CreditCard","Delete","Button","Divider","Grid","Stack","TextField","Typography","Box","axios","useSnackbar","React","useEffect","useState","useHistory","config","Cart","getTotalCartValue","generateCartItemsFrom","Footer","Header","AddNewAddress","jsxDEV","_jsxDEV","Fragment","_Fragment","AddNewAddressView","token","newAddress","handleNewAddress","addAddress","display","flexDirection","children","multiline","minRows","placeholder","onChange","e","value","target","fileName","_jsxFileName","lineNumber","columnNumber","direction","my","variant","onClick","isAddingNewAddress","_c","Checkout","_s","localStorage","getItem","history","enqueueSnackbar","items","setItems","products","setProducts","addresses","setAddresses","all","selected","setNewAddress","isPaymentDone","setIsPaymentDone","getProducts","response","get","endpoint","data","status","message","fetchCart","headers","Authorization","getAddresses","push","url","address","post","deleteAddress","addressId","delete","validateRequest","totalCartValue","currentBalance","length","handleRazorpayPayment","amount","options","key","currency","name","description","handler","prefill","email","contact","theme","color","rzp","window","Razorpay","open","performCheckout","setItem","err","onLoadHandler","productsData","cartData","cartDetails","hasHiddenAuthButtons","container","item","xs","md","className","padding","sx","fontWeight","map","_id","startIcon","id","size","currNewAddress","disabled","bgcolor","isReadOnly","_c2","$RefreshReg$"],"sources":["C:/Users/patil/Downloads/Qkart_FrontEnd-main/Qkart_FrontEnd-main/src/components/Checkout.js"],"sourcesContent":["import { CreditCard, Delete } from \"@mui/icons-material\";\nimport {\n  Button,\n  Divider,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { config } from \"../App\";\nimport Cart, { getTotalCartValue, generateCartItemsFrom } from \"./Cart\";\nimport \"./Checkout.css\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport AddNewAddress from \"./AddNewAddress\";\n\nconst AddNewAddressView = ({\n  token,\n  newAddress,\n  handleNewAddress,\n  addAddress,\n}) => {\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <TextField\n        multiline\n        minRows={4}\n        placeholder=\"Enter your complete address\"\n        onChange={(e) =>\n          handleNewAddress({ ...newAddress, value: e.target.value })\n        }\n      />\n      <Stack direction=\"row\" my=\"1rem\">\n        <Button\n          variant=\"contained\"\n          onClick={async () => await addAddress(token, newAddress)}\n        >\n          Add\n        </Button>\n        <Button\n          variant=\"text\"\n          onClick={() =>\n            handleNewAddress({ ...newAddress, isAddingNewAddress: false })\n          }\n        >\n          Cancel\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n\nconst Checkout = () => {\n  const token = localStorage.getItem(\"token\");\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n  const [items, setItems] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [addresses, setAddresses] = useState({ all: [], selected: \"\" });\n  const [newAddress, setNewAddress] = useState({\n    isAddingNewAddress: false,\n    value: \"\",\n  });\n  const [isPaymentDone, setIsPaymentDone] = useState(false);\n\n  const getProducts = async () => {\n    try {\n      const response = await axios.get(`${config.endpoint}/products`);\n      setProducts(response.data);\n      return response.data;\n    } catch (e) {\n      if (e.response && e.response.status === 500) {\n        enqueueSnackbar(e.response.data.message, { variant: \"error\" });\n        return null;\n      } else {\n        enqueueSnackbar(\n          \"Could not fetch products. Check that the backend is running, reachable and returns valid JSON.\",\n          {\n            variant: \"error\",\n          }\n        );\n      }\n    }\n  };\n\n  const fetchCart = async (token) => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${config.endpoint}/cart`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return response.data;\n    } catch {\n      enqueueSnackbar(\n        \"Could not fetch cart details. Check that the backend is running, reachable and returns valid JSON.\",\n        {\n          variant: \"error\",\n        }\n      );\n      return null;\n    }\n  };\n\n  const getAddresses = async (token) => {\n    if (!token) {\n      history.push(\"/login\");\n      enqueueSnackbar(\"You must be logged in to access checkout page\", {\n        variant: \"error\",\n      });\n      return;\n    }\n\n    try {\n      const response = await axios.get(`${config.endpoint}/user/addresses`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      setAddresses({ ...addresses, all: response.data });\n      return response.data;\n    } catch {\n      enqueueSnackbar(\n        \"Could not fetch addresses. Check that the backend is running, reachable and returns valid JSON.\",\n        {\n          variant: \"error\",\n        }\n      );\n      return null;\n    }\n  };\n\n  const addAddress = async (token, newAddress) => {\n    try {\n      const url = `${config.endpoint}/user/addresses`;\n      const address = { address: newAddress.value };\n      const response = await axios.post(url, address, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setNewAddress({ isAddingNewAddress: false, value: \"\" });\n      setAddresses({ ...addresses, all: response.data });\n    } catch (e) {\n      if (e.response) {\n        enqueueSnackbar(e.response.data.message, { variant: \"error\" });\n      } else {\n        enqueueSnackbar(\n          \"Could not add this address. Check that the backend is running, reachable and returns valid JSON.\",\n          {\n            variant: \"error\",\n          }\n        );\n      }\n    }\n  };\n\n  const deleteAddress = async (token, addressId) => {\n    try {\n      const url = `${config.endpoint}/user/addresses/${addressId}`;\n      const response = await axios.delete(url, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setAddresses({ ...addresses, all: response.data });\n    } catch (e) {\n      if (e.response) {\n        enqueueSnackbar(e.response.data.message, { variant: \"error\" });\n      } else {\n        enqueueSnackbar(\n          \"Could not delete this address. Check that the backend is running, reachable and returns valid JSON.\",\n          {\n            variant: \"error\",\n          }\n        );\n      }\n    }\n  };\n\n  const validateRequest = (items, addresses) => {\n    const totalCartValue = getTotalCartValue(items);\n    const currentBalance = localStorage.getItem(\"balance\");\n    if (totalCartValue > currentBalance) {\n      enqueueSnackbar(\n        \"You do not have enough balance in your wallet for this purchase.\",\n        { variant: \"error\" }\n      );\n      return false;\n    }\n    if (addresses.all.length === 0) {\n      enqueueSnackbar(\"Please add a new address before proceeding.\", {\n        variant: \"error\",\n      });\n      return false;\n    }\n    if (addresses.selected.length === 0) {\n      enqueueSnackbar(\"Please select one shipping address to proceed.\", {\n        variant: \"error\",\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const handleRazorpayPayment = async () => {\n    const amount = getTotalCartValue(items) * 100; // Convert to paisa\n    const options = {\n      key: \"YOUR_RAZORPAY_KEY_ID\",\n      amount: amount,\n      currency: \"INR\",\n      name: \"Your Company Name\",\n      description: \"Test Transaction\",\n      handler: function (response) {\n        setIsPaymentDone(true);\n        enqueueSnackbar(\"Payment successful\", { variant: \"success\" });\n      },\n      prefill: {\n        name: \"Your Name\",\n        email: \"your.email@example.com\",\n        contact: \"9999999999\",\n      },\n      theme: {\n        color: \"#3399cc\",\n      },\n    };\n\n    const rzp = new window.Razorpay(options);\n    rzp.open();\n  };\n\n  const performCheckout = async (token, items, addresses) => {\n    try {\n      if (validateRequest(items, addresses)) {\n        const url = `${config.endpoint}/cart/checkout`;\n        const response = await axios.post(\n          url,\n          { addressId: addresses.selected },\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        const totalCartValue = getTotalCartValue(items);\n        const currentBalance = localStorage.getItem(\"balance\");\n        localStorage.setItem(\"balance\", currentBalance - totalCartValue);\n        history.push(\"/thanks\");\n        enqueueSnackbar(\"Order placed successfully\", { variant: \"success\" });\n      }\n    } catch (err) {\n      if (err.response) {\n        enqueueSnackbar(err.response.data.message, { variant: \"error\" });\n      }\n    }\n  };\n\n  useEffect(() => {\n    const onLoadHandler = async () => {\n      const productsData = await getProducts();\n      const cartData = await fetchCart(token);\n\n      if (productsData && cartData) {\n        const cartDetails = await generateCartItemsFrom(cartData, productsData);\n        setItems(cartDetails);\n      }\n      await getAddresses(token);\n    };\n    onLoadHandler();\n  }, []);\n\n  return (\n    <>\n      <Header hasHiddenAuthButtons />\n      <Grid container>\n        <Grid item xs={12} md={9}>\n          <Box className=\"checkout-container\" padding=\"1rem\">\n            <Typography variant=\"h4\" sx={{ fontWeight: \"bold\" }} my=\"1rem\">\n              Checkout\n            </Typography>\n            <Typography my=\"1rem\" color=\"#3C3C3C\" sx={{ fontWeight: \"bold\" }}>\n              Shipping\n            </Typography>\n            <Typography my=\"1rem\">\n              Manage all the shipping addresses you want. This way you won't\n              have to enter the shipping address manually with every order.\n              Select the address you want to get your order delivered.\n            </Typography>\n\n            <Divider />\n            <Box>\n              {addresses.all.length > 0 ? (\n                addresses.all.map((address) => (\n                  <Box\n                    className={`address-item  ${\n                      address._id === addresses.selected\n                        ? \"selected\"\n                        : \"not-selected\"\n                    }`}\n                    key={address._id}\n                    onClick={() =>\n                      setAddresses({ ...addresses, selected: address._id })\n                    }\n                  >\n                    <Typography>{address.address}</Typography>\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<Delete />}\n                      onClick={() => deleteAddress(token, address._id)}\n                    >\n                      Delete\n                    </Button>\n                  </Box>\n                ))\n              ) : (\n                <Typography my=\"1rem\">\n                  No addresses found for this account. Please add one to\n                  proceed.\n                </Typography>\n              )}\n            </Box>\n\n            {newAddress.isAddingNewAddress ? (\n              <AddNewAddressView\n                token={token}\n                newAddress={newAddress}\n                handleNewAddress={setNewAddress}\n                addAddress={addAddress}\n              />\n            ) : (\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                id=\"add-new-btn\"\n                size=\"large\"\n                onClick={() => {\n                  setNewAddress((currNewAddress) => ({\n                    ...currNewAddress,\n                    isAddingNewAddress: true,\n                  }));\n                }}\n              >\n                Add new address\n              </Button>\n            )}\n\n            <Typography color=\"#3C3C3C\" variant=\"h4\" my=\"1rem\">\n              Payment\n            </Typography>\n            <Typography color=\"#3C3C3C\" my=\"1rem\">\n              Payment Method\n            </Typography>\n            <Divider />\n\n            <Box my=\"1rem\">\n              <Typography>Wallet</Typography>\n              <Typography>\n                Pay ${getTotalCartValue(items)} of available $\n                {localStorage.getItem(\"balance\")}\n              </Typography>\n            </Box>\n\n            <Button\n              variant=\"contained\"\n              onClick={handleRazorpayPayment}\n            >\n              Pay with Razorpay\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => setIsPaymentDone(true)}\n            >\n              Cash on Delivery\n            </Button>\n\n            <Button\n              startIcon={<CreditCard />}\n              variant=\"contained\"\n              onClick={async () =>\n                await performCheckout(token, items, addresses)\n              }\n              disabled={!isPaymentDone}\n            >\n              PLACE ORDER\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={12} md={3} bgcolor=\"#E9F5E1\">\n          <Cart isReadOnly products={products} items={items} />\n        </Grid>\n      </Grid>\n      <Footer />\n    </>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}